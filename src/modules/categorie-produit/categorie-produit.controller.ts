import { Controller, Post, Get, Put, Delete, Body, Param, UseGuards } from '@nestjs/common';
import { CategorieProduitService } from './categorie-produit.service';
import { CreateCategorieDto } from './dto/create-categorie.dto';
import { ApiTags, ApiOperation, ApiBearerAuth } from '@nestjs/swagger';
import { JwtAuthGuard } from '../auth/jwt-auth.guard';
import { RolesGuard } from '../auth/roles.guard';
import { SetRoles } from '../auth/setRoles.decorator';

@ApiTags('CatÃ©gories de Produits')
@Controller('categories')
@ApiBearerAuth() 
@UseGuards(JwtAuthGuard, RolesGuard)  // ðŸ”’ Protection avec JWT et rÃ´les
export class CategorieProduitController {
  constructor(private readonly categorieService: CategorieProduitService) {}

  @Post()
  @UseGuards(JwtAuthGuard)
  @SetRoles('admin') // ðŸ”’ Seuls les admins peuvent ajouter une catÃ©gorie
  @ApiOperation({ summary: 'Ajouter une catÃ©gorie de produit' })
  async createCategorie(@Body() dto: CreateCategorieDto) {
    
    return this.categorieService.createCategorie(dto);
  }

  @Get()
  @SetRoles('admin', 'commercial') // ðŸ”’ Admin & Commercial peuvent voir les catÃ©gories
  @ApiOperation({ summary: 'Voir la liste des catÃ©gories de produits' })
  async getAllCategories() {
    return this.categorieService.getAllCategories();
  }

  @Get(':id')
  @SetRoles('admin', 'commercial') // ðŸ”’ Admin & Commercial peuvent voir une catÃ©gorie
  @ApiOperation({ summary: 'Obtenir une catÃ©gorie par ID' })
  async getCategorieById(@Param('id') id: number) {
    return this.categorieService.getCategorieById(id);
  }

  @Put(':id')
  @SetRoles('admin') // ðŸ”’ Seuls les admins peuvent modifier une catÃ©gorie
  @ApiOperation({ summary: 'Mettre Ã  jour une catÃ©gorie' })
  async updateCategorie(@Param('id') id: number, @Body() dto: CreateCategorieDto) {
    return this.categorieService.updateCategorie(id, dto);
  }

  @Delete(':id')
  @SetRoles('admin') // ðŸ”’ Seuls les admins peuvent supprimer une catÃ©gorie
  @ApiOperation({ summary: 'Supprimer une catÃ©gorie' })
  async deleteCategorie(@Param('id') id: number) {
    return this.categorieService.deleteCategorie(id);
  }
}
